1
00:00:00,810 --> 00:00:04,393
MBSE Podcast アドベントカレンダーの
2番目の扉へようこそ

2
00:00:04,393 --> 00:00:07,780
私たちはこれからシステムアイデア(System Idea)と
システムの目的(System Goal)を記述します

3
00:00:08,210 --> 00:00:11,939
システムアイデアは対象システム(SOI)の
エレベーターピッチです

4
00:00:11,939 --> 00:00:17,829
何が特別であるかを特に重視して
そのシステムについて簡潔に説明します

5
00:00:18,430 --> 00:00:21,630
それはテキストで記述されますが
必要に応じて図表も用います

6
00:00:21,630 --> 00:00:23,780
ではモデルを見てみましょう

7
00:00:28,020 --> 00:00:33,030
SysMLはシステムアイデアの概念を知りません

8
00:00:33,030 --> 00:00:33,837
興味深いことに

9
00:00:33,837 --> 00:00:40,380
システムズモデリング言語であるにもかかわらず
SysMLはシステムの概念も知らないのです

10
00:00:40,850 --> 00:00:42,779
SysMLに新しい概念を
教えることができます

11
00:00:42,779 --> 00:00:46,689
こちらに関するプロファイルと
ステレオタイプがあります

12
00:00:46,689 --> 00:00:51,753
次回以降の扉で
こちらについても解説します

13
00:00:52,610 --> 00:00:54,079
簡単に説明すると

14
00:00:54,079 --> 00:01:00,869
ブロックを特化したステレオタイプにより
SYSMODがシステムの概念を導入します

15
00:01:00,869 --> 00:01:04,929
システムアイデアはそのプロパティとして
定義することが可能です

16
00:01:05,442 --> 00:01:08,390
モデルではこのように表現します

17
00:01:08,390 --> 00:01:12,520
こちらはテキスト形式なので
とても具体的なプロパティです

18
00:01:12,520 --> 00:01:15,830
システムアイデアの一部に
図表が含まれる場合もあります

19
00:01:17,170 --> 00:01:20,019
クリスマスツリーのシステムアイデアは
このように記述されています

20
00:01:20,019 --> 00:01:24,159
「クリスマスツリーはクリスマスの
お祝いの象徴的な中心です」

21
00:01:24,159 --> 00:01:26,950
「人々、特に子供たちを喜ばせます」

22
00:01:26,950 --> 00:01:33,780
「クリスマスツリーの枝は悪霊が家に入るのを防ぎ
来年の春にむけた希望を与えます」

23
00:01:34,220 --> 00:01:38,920
システムの目的(System Objective)も
SysMLが認識できない概念です

24
00:01:38,920 --> 00:01:43,710
こちらの概念をSysMLに導入するため
SYSMODはステレオタイプを定義します

25
00:01:43,710 --> 00:01:48,054
システムの目的はSysMLの要求の特別な形式です

26
00:01:49,399 --> 00:01:54,179
こちらの要求図は
クリスマスツリーの目的を示しています

27
00:01:54,179 --> 00:01:59,240
上位レベルに要約した目的を
"OBJ0"と定義しました

28
00:01:59,240 --> 00:02:03,880
"OBJ0"では"MBSE Christmas Tree Objectives"
の全体の要約をおこなっています

29
00:02:03,880 --> 00:02:14,658
他にも"Best Christmas Tree"、"Number of Gifts"
"Zero Footprint"等の異なる目的があります

30
00:02:14,658 --> 00:02:21,365
それら全てが"MBSE Podcast"の目的に
トレースできるようにしています

31
00:02:22,550 --> 00:02:27,660
この時点ではダイアグラムにそれほど
たくさんの要素が含まれません

32
00:02:27,660 --> 00:02:32,680
そのため、テーブルでモデル情報を
管理する良い練習になります

33
00:02:32,680 --> 00:02:34,540
この段階でたくさんのモデリングが必要です

34
00:02:34,540 --> 00:02:38,380
モデリングツールのテーブルは
たいてい多くの労力が必要になります

35
00:02:38,380 --> 00:02:41,370
モデル内の全ての要素を示そうとするためです

36
00:02:41,370 --> 00:02:46,290
ダイアグラムの場合は、モデラーが手動で
配置したエレメントのみが存在します

37
00:02:47,800 --> 00:02:52,260
必要であれば、ダイアグラムは素早く簡単に
ワークショップのために作成することが可能です

38
00:02:52,580 --> 00:02:57,400
利害関係者(Stakeholder)について
気になった方もいると思います

39
00:02:57,400 --> 00:03:02,279
システムの目的は、目的に責任をもつ
利害関係者との関係をもちます

40
00:03:02,279 --> 00:03:08,316
ここではPodcastのホストである
Christianと私です

41
00:03:08,316 --> 00:03:12,325
私たちはシステム全体に対しても
同様に責任をもっています

42
00:03:13,332 --> 00:03:16,833
SysMLは利害関係者の概念を知っています

43
00:03:16,833 --> 00:03:21,780
そうであるにも関わらず、SYSMODは
"extendedStkeholder"のステレオタイプを定義します

44
00:03:21,780 --> 00:03:28,150
契約情報や優先度といった
特別なプロパティを拡張するためです

45
00:03:29,010 --> 00:03:34,519
利害関係者は要求とも関係があるため
利害関係者もそこに所属します

46
00:03:34,519 --> 00:03:37,198
それらはモデルの要求パッケージ内に保存されます

47
00:03:37,198 --> 00:03:42,440
ダイアグラムで表現された利害関係者を
より実用的なテーブルの形式で表現可能です

48
00:03:43,565 --> 00:03:47,210
この場合、テーブルは利害関係者の
全てのプロパティを示しません

49
00:03:47,210 --> 00:03:54,190
名前、ドキュメンテーション
連絡先情報、優先度のみ示します

50
00:03:56,800 --> 00:04:00,327
MBSE Podcastアドベントカレンダーの
2番目の扉は以上となります

51
00:04:00,327 --> 00:04:02,683
すばらしい12月2日でありますように

52
00:04:02,997 --> 00:04:03,997
さようなら

53
00:04:04,707 --> 00:04:05,630
さようなら
