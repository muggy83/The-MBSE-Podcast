1
00:00:00,480 --> 00:00:04,902
Welcome to the 7th door of
our MBSE Podcast Advent Calendar

2
00:00:04,902 --> 00:00:09,432
In this episode we take a look at
the System Use Cases Activities

3
00:00:09,970 --> 00:00:14,560
Behind each of our use cases
we define an activity to model

4
00:00:14,560 --> 00:00:18,270
The functional decomposition
including control and object flows

5
00:00:18,270 --> 00:00:20,440
Let's look at it in our model

6
00:00:22,542 --> 00:00:24,370
In the containment Tree

7
00:00:24,370 --> 00:00:28,810
you can see that the activity
is owned by the use case

8
00:00:29,795 --> 00:00:35,710
The activity diagram shows the
execution order of actions

9
00:00:36,900 --> 00:00:39,950
We've modeled each action as
a call behavior action

10
00:00:39,950 --> 00:00:43,001
which means each step of
the "Christmas Tree Installation"

11
00:00:43,001 --> 00:00:46,910
is detailed and defined
by an another activity

12
00:00:46,910 --> 00:00:51,920
This defines the entire of system behavior
of the use cases with the activities

13
00:00:51,920 --> 00:00:54,440
which has many advantages

14
00:00:54,440 --> 00:01:00,311
It is a prerequisite for the FAS method
for deriving Functional Architectures

15
00:01:00,311 --> 00:01:03,279
which we will have a look
on another episode

16
00:01:03,609 --> 00:01:07,600
An another special feature in
our modeling is the separation

17
00:01:07,600 --> 00:01:11,664
Functions are responsible for
input and output functionality

18
00:01:11,664 --> 00:01:15,548
from and to the actors 
and the other functions

19
00:01:15,548 --> 00:01:18,790
We have modeled this
with the activity partitions

20
00:01:18,790 --> 00:01:24,899
This is analytically useful and also a
good preliminary work for the FAS method

21
00:01:24,899 --> 00:01:29,360
The stereotype "IO" comes from
the profile for the FAS method

22
00:01:30,040 --> 00:01:34,320
The outgoing "Transportation Net"
parameter of the activity on the left side

23
00:01:34,320 --> 00:01:37,459
is a so-called streaming parameter

24
00:01:37,459 --> 00:01:43,497
which means the object can flow out of
the activity during the execution

25
00:01:44,070 --> 00:01:48,625
The input parameter "Transportation
Package" flows into a data store node

26
00:01:48,625 --> 00:01:52,095
to make the object available
several times for the protections

27
00:01:53,989 --> 00:01:59,669
Finally, we show another example of
our "MBSE Podcast Christmas Tree"

28
00:01:59,669 --> 00:02:03,020
The continues use case
"Enjoy Christmas tree"

29
00:02:03,020 --> 00:02:08,290
Continues use cases represent
a continuous behavior

30
00:02:08,950 --> 00:02:12,115
The "Flash lights" activity
runs continuously

31
00:02:12,115 --> 00:02:14,359
until the tree is stranded off

32
00:02:14,359 --> 00:02:17,068
That behavior is model
in the state machine

33
00:02:17,068 --> 00:02:20,588
that we will present in another day

34
00:02:21,109 --> 00:02:24,670
So much for 7th door of
our MBSE Podcast Advent Calendar

35
00:02:24,670 --> 00:02:27,528
And we wish you a great 7th of December

36
00:02:27,928 --> 00:02:28,640
Bye-bye
